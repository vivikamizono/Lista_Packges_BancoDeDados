CREATE OR REPLACE PACKAGE PKG_PROFESSOR AS
    -- Cursor para total de turmas por professor
    CURSOR CURSOR_TURMAS_PROFESSOR IS
        SELECT P.NOME AS NOME_PROFESSOR, COUNT(T.ID_TURMA) AS TOTAL_TURMAS
        FROM PROFESSORES P
        JOIN TURMAS T ON P.ID_PROFESSOR = T.ID_PROFESSOR
        GROUP BY P.NOME
        HAVING COUNT(T.ID_TURMA) > 1;

    -- Function para total de turmas de um professor
    FUNCTION TOTAL_TURMAS_PROFESSOR(P_ID_PROFESSOR IN NUMBER) RETURN NUMBER;

    -- Function para professor de uma disciplina
    FUNCTION PROFESSOR_DISCIPLINA(P_ID_DISCIPLINA IN NUMBER) RETURN VARCHAR2;
END PKG_PROFESSOR;
/

CREATE OR REPLACE PACKAGE BODY PKG_PROFESSOR AS
    -- Function para total de turmas de um professor
    FUNCTION TOTAL_TURMAS_PROFESSOR(P_ID_PROFESSOR IN NUMBER) RETURN NUMBER IS
        V_TOTAL_TURMAS NUMBER := 0;
    BEGIN
        SELECT COUNT(*)
        INTO V_TOTAL_TURMAS
        FROM TURMAS
        WHERE ID_PROFESSOR = P_ID_PROFESSOR;

        RETURN V_TOTAL_TURMAS;
    END TOTAL_TURMAS_PROFESSOR;

    -- Function para professor de uma disciplina
    FUNCTION PROFESSOR_DISCIPLINA(P_ID_DISCIPLINA IN NUMBER) RETURN VARCHAR2 IS
        V_NOME_PROFESSOR VARCHAR2(100);
    BEGIN
        SELECT P.NOME
        INTO V_NOME_PROFESSOR
        FROM PROFESSORES P
        JOIN TURMAS T ON P.ID_PROFESSOR = T.ID_PROFESSOR
        JOIN DISCIPLINAS D ON T.ID_DISCIPLINA = D.ID_DISCIPLINA
        WHERE D.ID_DISCIPLINA = P_ID_DISCIPLINA;

        RETURN V_NOME_PROFESSOR;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RETURN 'Nenhum professor encontrado para esta disciplina';
        WHEN OTHERS THEN
            RETURN 'Erro ao buscar professor';
    END PROFESSOR_DISCIPLINA;
END PKG_PROFESSOR;
/
